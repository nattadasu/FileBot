{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def RcN = target.dir;def Yh = any{ s } { 0 };def xeY = any{ e } { special };def PvO = 0;def VnN = null;try {if (db.TheTVDB?.id) {def uQ = "https://api.tvmaze.com";def Dqh = curl "$uQ/lookup/shows?thetvdb=${db.TheTVDB.id}";def _Ou = Dqh.id;VnN = curl "$uQ/shows/$_Ou/episodebynumber?season=$Yh&number=$xeY";PvO = VnN.id}} catch (Exception err) {};def cs = "";def Biw = "en-US";def zoY = null;def LcN = new File("$home/.filebotsecrets.json");if (LcN.exists()) {def fXF = new groovy.json.JsonSlurper().parseText(LcN.text);cs = fXF.cs;Biw = fXF.language;zoY = fXF.person_info_dir};def xP = "https://api.themoviedb.org/3/tv/$id/season/$Yh/episode/$xeY";def FHc = ["accept": "application/json"];def cR = curl(FHc, "$xP?language=$Biw&api_key=$cs");def Kd = curl(FHc, "$xP/external_ids?api_key=$cs");def Wr = curl(FHc, "$xP/credits?language=$Biw&api_key=$cs");def tW = curl(FHc, "$xP/images?include_image_language=en%2Cnull&api_key=$cs");def GiC = (RcN / target.nameWithoutExtension + "-thumb.jpg").toString();def DtO = new File(GiC);def Nhr = new File(GiC.replace("-thumb",""));if (!(DtO.exists() || Nhr.exists()) && tW.stills.size() > 0) {def gUB = "https://image.tmdb.org/t/p/original${tW.stills[0].file_path}";system "curl", "-o", RcN / target.nameWithoutExtension + "-thumb.jpg", gUB};def Nhy = [];(Wr.cast + Wr.guest_stars).eachWithIndex { Snx, eZ ->  def CYZ = "$zoY/${Snx.name[0]}/${Snx.name}";def zo = Snx.order ?: eZ + Nhy.size();Nhy << [YzB: Snx.name, PLk: Snx.character, dQ: zo, CYZ: "${CYZ}/folder.jpg"];if (zoY) {def fin = new File(CYZ);if (!fin.exists()) {fin.mkdirs();system "curl", "-o", "${CYZ}/folder.jpg", "https://image.tmdb.org/t/p/original${Snx.profile_path}"}}};def Ew = RcN / target.nameWithoutExtension + ".nfo";XML(Ew) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(cR.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Kd?.imdb_id) {uniqueid(type: "imdb", value: Kd.imdb_id, Kd.imdb_id);imdbid(Kd.imdb_id)};if (Kd?.tvdb_id) {uniqueid(type: "tvdb", value: Kd.tvdb_id, Kd.tvdb_id);tvdbid(Kd.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (PvO) {uniqueid(type: "tvmaze", value: PvO, PvO);tvmazeid(PvO)}} catch (Exception err) {};if (DtO.exists()) {art {poster(GiC)}};Nhy.each { xW ->  actor {name(xW.YzB);role(xW.PLk);sortorder(xW.dQ);if (zoY) { thumb(xW.CYZ) }}};showtitle(n);episode(xeY);season(Yh);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { fV ->  video {def eDe = Float.parseFloat(fV.'Duration');codec(fV.'Format');micodec(fV.'Format');bitrate(fV.'BitRate');width(fV.'Width');height(fV.'Height');aspect(fV.'DisplayAspectRatio/String');aspectratio(fV.'DisplayAspectRatio/String');framerate(fV.'FrameRate');'default'(fV.'Default' == "Yes" ? "True" : "False");forced(fV.'Forced' == "Yes" ? "True" : "False");duration(fV.'Duration' ? (int) Math.floor(eDe / 60000) : 0);durationinseconds(fV.'Duration' ? (int) Math.floor(eDe / 1000) : 0)}};target.mediaInfo.Audio.each { ybj ->  audio {codec(ybj.'Format');micodec(ybj.'Format');language(ybj.'Language/String3');channels(ybj.'Channel(s)');samplingrate(ybj.'SamplingRate');'default'(ybj.'Default' == "Yes" ? "True" : "False");forced(ybj.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { je ->  subtitle {codec(je.'Format');micodec(je.'Format');width('0');height('0');language(je.'Language/String3');'default'(je.'Default' == "Yes" ? "True" : "False");forced(je.'Forced' == "Yes" ? "True" : "False")}}}}}}}