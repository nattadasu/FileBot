{ source, target, metadata -> if (type.toString() != "Episode" && !f.video) {return null};def Uh = target.dir;def UI = any{ s } { 0 };def OLk = any{ e } { special };def kW = 0;def pH = null;try {if (db.TheTVDB?.id) {def TBA = "https://api.tvmaze.com";def Ek = curl "$TBA/lookup/shows?thetvdb=${db.TheTVDB.id}";def Da = Ek.id;pH = curl "$TBA/shows/$Da/episodebynumber?season=$UI&number=$OLk";kW = pH.id}} catch (Exception err) {};def uH = "";def alN = "en-US";def cT = null;def _G = new File("$home/.filebotsecrets.json");if (_G.exists()) {def QJZ = new groovy.json.JsonSlurper().parseText(_G.text);uH = QJZ.uH;alN = QJZ.language;cT = QJZ.person_info_dir};def Iqa = "https://api.themoviedb.org/3/tv/$id/season/$UI/episode/$OLk";def cEn = ["accept": "application/json"];def nM = curl(cEn, "$Iqa?language=$alN&api_key=$uH");def GZt = curl(cEn, "$Iqa/external_ids?api_key=$uH");def tGI = curl(cEn, "$Iqa/credits?language=$alN&api_key=$uH");def nX = curl(cEn, "$Iqa/images?include_image_language=en%2Cnull&api_key=$uH");def tes = (Uh / target.nameWithoutExtension + "-thumb.jpg").toString();def KmL = new File(tes);def We = new File(tes.replace("-thumb",""));if (!(KmL.exists() || We.exists()) && nX.stills.size() > 0) {def nXR = "https://image.tmdb.org/t/p/original${nX.stills[0].file_path}";system "curl", "-o", Uh / target.nameWithoutExtension + "-thumb.jpg", nXR};def Hzr = [];(tGI.cast + tGI.guest_stars).eachWithIndex { uYQ, SH -> def tSb = "$cT/${uYQ.name[0]}/${uYQ.name}";def Np = uYQ.order ?: SH + Hzr.size();Hzr << [rJE: uYQ.name, dB: uYQ.character, VfH: Np, tSb: "${tSb}/folder.jpg"];if (cT) {def VrC = new File(tSb);if (!VrC.exists()) {VrC.mkdirs();system "curl", "-o", "${tSb}/folder.jpg", "https://image.tmdb.org/t/p/original${uYQ.profile_path}"}}};def jVn = Uh / target.nameWithoutExtension + ".nfo";XML(jVn) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(nM.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (GZt?.imdb_id) {uniqueid(type: "imdb", value: GZt.imdb_id, GZt.imdb_id);imdbid(GZt.imdb_id)};if (GZt?.tvdb_id) {uniqueid(type: "tvdb", value: GZt.tvdb_id, GZt.tvdb_id);tvdbid(GZt.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (kW) {uniqueid(type: "tvmaze", value: kW, kW);tvmazeid(kW)}} catch (Exception err) {};if (KmL.exists()) {art {poster(tes)}};Hzr.each { ko ->  actor {name(ko.rJE);role(ko.dB);sortorder(ko.VfH);if (cT) { thumb(ko.tSb) }}};showtitle(n);episode(OLk);season(UI);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { JwP ->  video {def CYp = Float.parseFloat(JwP.'Duration');codec(JwP.'Format');micodec(JwP.'Format');bitrate(JwP.'BitRate');width(JwP.'Width');height(JwP.'Height');aspect(JwP.'DisplayAspectRatio/String');aspectratio(JwP.'DisplayAspectRatio/String');framerate(JwP.'FrameRate');'default'(JwP.'Default' == "Yes" ? "True" : "False");forced(JwP.'Forced' == "Yes" ? "True" : "False");duration(JwP.'Duration' ? (int) Math.floor(CYp / 60000) : 0);durationinseconds(JwP.'Duration' ? (int) Math.floor(CYp / 1000) : 0)}};target.mediaInfo.Audio.each { TKG ->  audio {codec(TKG.'Format');micodec(TKG.'Format');language(TKG.'Language/String3');channels(TKG.'Channel(s)');samplingrate(TKG.'SamplingRate');'default'(TKG.'Default' == "Yes" ? "True" : "False");forced(TKG.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { qy ->  subtitle {codec(qy.'Format');micodec(qy.'Format');width('0');height('0');language(qy.'Language/String3');'default'(qy.'Default' == "Yes" ? "True" : "False");forced(qy.'Forced' == "Yes" ? "True" : "False")}}}}}}}