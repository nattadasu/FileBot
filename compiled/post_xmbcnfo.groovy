{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def XZ = target.dir;def yKW = any{ s } { 0 };def JeZ = any{ e } { special };def FGV = 0;def uL = null;try {if (db.TheTVDB?.id) {def wF = "https://api.tvmaze.com";def zf = curl "$wF/lookup/shows?thetvdb=${db.TheTVDB.id}";def fm = zf.id;uL = curl "$wF/shows/$fm/episodebynumber?season=$yKW&number=$JeZ";FGV = uL.id}} catch (Exception err) {};def pzb = "";def FUl = "en-US";def LsS = null;def _a = new File("$home/.filebotsecrets.json");if (_a.exists()) {def fb = new groovy.json.JsonSlurper().parseText(_a.text);pzb = fb.pzb;FUl = fb.language;LsS = fb.person_info_dir};def xXY = "https://api.themoviedb.org/3/tv/$id/season/$yKW/episode/$JeZ";def bgL = ["accept": "application/json"];def PL = curl(bgL, "$xXY?language=$FUl&api_key=$pzb");def xq = curl(bgL, "$xXY/external_ids?api_key=$pzb");def wz = curl(bgL, "$xXY/credits?language=$FUl&api_key=$pzb");def fQx = curl(bgL, "$xXY/images?include_image_language=en%2Cnull&api_key=$pzb");def UM = (XZ / target.nameWithoutExtension + "-thumb.jpg").toString();def Qcs = new File(UM);def Hum = new File(UM.replace("-thumb",""));if (!(Qcs.exists() || Hum.exists()) && fQx.stills.size() > 0) {def dM = "https://image.tmdb.org/t/p/original${fQx.stills[0].file_path}";system "curl", "-o", XZ / target.nameWithoutExtension + "-thumb.jpg", dM};def Qu = [];(wz.cast + wz.guest_stars).eachWithIndex { yQY, YZs ->  def zd = "$LsS/${yQY.name[0]}/${yQY.name}";def oY = yQY.order ?: YZs + Qu.size();Qu << [Gs: yQY.name, fqn: yQY.character, QG: oY, zd: "${zd}/folder.jpg"];if (LsS) {def nx = new File(zd);if (!nx.exists()) {nx.mkdirs();system "curl", "-o", "${zd}/folder.jpg", "https://image.tmdb.org/t/p/original${yQY.profile_path}"}}};def gKn = XZ / target.nameWithoutExtension + ".nfo";XML(gKn) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(PL.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (xq?.imdb_id) {uniqueid(type: "imdb", value: xq.imdb_id, xq.imdb_id);imdbid(xq.imdb_id)};if (xq?.tvdb_id) {uniqueid(type: "tvdb", value: xq.tvdb_id, xq.tvdb_id);tvdbid(xq.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (FGV) {uniqueid(type: "tvmaze", value: FGV, FGV);tvmazeid(FGV)}} catch (Exception err) {};if (Qcs.exists()) {art {poster(UM)}};Qu.each { yvF ->  actor {name(yvF.Gs);role(yvF.fqn);sortorder(yvF.QG);if (LsS) { thumb(yvF.zd) }}};showtitle(n);episode(JeZ);season(yKW);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Ai ->  video {def IP = Float.parseFloat(Ai.'Duration');codec(Ai.'Format');micodec(Ai.'Format');bitrate(Ai.'BitRate');width(Ai.'Width');height(Ai.'Height');aspect(Ai.'DisplayAspectRatio/String');aspectratio(Ai.'DisplayAspectRatio/String');framerate(Ai.'FrameRate');'default'(Ai.'Default' == "Yes" ? "True" : "False");forced(Ai.'Forced' == "Yes" ? "True" : "False");duration(Ai.'Duration' ? (int) Math.floor(IP / 60000) : 0);durationinseconds(Ai.'Duration' ? (int) Math.floor(IP / 1000) : 0)}};target.mediaInfo.Audio.each { ik_ ->  audio {codec(ik_.'Format');micodec(ik_.'Format');language(ik_.'Language/String3');channels(ik_.'Channel(s)');samplingrate(ik_.'SamplingRate');'default'(ik_.'Default' == "Yes" ? "True" : "False");forced(ik_.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { WlS ->  subtitle {codec(WlS.'Format');micodec(WlS.'Format');width('0');height('0');language(WlS.'Language/String3');'default'(WlS.'Default' == "Yes" ? "True" : "False");forced(WlS.'Forced' == "Yes" ? "True" : "False")}}}}}}}