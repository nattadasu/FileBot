{ source, target, metadata -> if (type.toString() != "Episode" && !f.video) {return null};def bkX = target.dir;def TB = any{ s } { 0 };def nL = any{ e } { special };def VF = 0;def REO = null;try {if (db.TheTVDB?.id) {def aW = "https://api.tvmaze.com";def AS = curl "$aW/lookup/shows?thetvdb=${db.TheTVDB.id}";def Seo = AS.id;REO = curl "$aW/shows/$Seo/episodebynumber?season=$TB&number=$nL";VF = REO.id}} catch (Exception err) {};def uEb = "";def uTY = "en-US";def ZGE = null;def uk = new File("$home/.filebotsecrets.json");if (uk.exists()) {def Xsg = new groovy.json.JsonSlurper().parseText(uk.text);uEb = Xsg.uEb;uTY = Xsg.language;ZGE = Xsg.person_info_dir};def ys = "https://api.themoviedb.org/3/tv/$id/season/$TB/episode/$nL";def Kf = ["accept": "application/json"];def gd = curl(Kf, "$ys?language=$uTY&api_key=$uEb");def UF = curl(Kf, "$ys/external_ids?api_key=$uEb");def jzw = curl(Kf, "$ys/credits?language=$uTY&api_key=$uEb");def A_a = curl(Kf, "$ys/images?include_image_language=en%2Cnull&api_key=$uEb");def vM = (bkX / target.nameWithoutExtension + "-thumb.jpg").toString();def CL = new File(vM);def VH = new File(vM.replace("-thumb",""));if (!(CL.exists() || VH.exists()) && A_a.stills.size() > 0) {def yO = "https://image.tmdb.org/t/p/original${A_a.stills[0].file_path}";system "curl", "-o", bkX / target.nameWithoutExtension + "-thumb.jpg", yO};def Epq = [];(jzw.cast + jzw.guest_stars).eachWithIndex { opy, ldp -> def wKx = "$ZGE/${opy.name[0]}/${opy.name}";def RFx = opy.order ?: ldp + Epq.size();Epq << [lt: opy.name, tI: opy.character, hzC: RFx, wKx: "${wKx}/folder.jpg"];if (ZGE) {def LM = new File(wKx);if (!LM.exists()) {LM.mkdirs();system "curl", "-o", "${wKx}/folder.jpg", "https://image.tmdb.org/t/p/original${opy.profile_path}"}}};def NO = bkX / target.nameWithoutExtension + ".nfo";XML(NO) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(gd.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (UF?.imdb_id) {uniqueid(type: "imdb", value: UF.imdb_id, UF.imdb_id);imdbid(UF.imdb_id)};if (UF?.tvdb_id) {uniqueid(type: "tvdb", value: UF.tvdb_id, UF.tvdb_id);tvdbid(UF.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (VF) {uniqueid(type: "tvmaze", value: VF, VF);tvmazeid(VF)}} catch (Exception err) {};if (CL.exists()) {art {poster(vM)}};Epq.each { WF ->  actor {name(WF.lt);role(WF.tI);sortorder(WF.hzC);if (ZGE) { thumb(WF.wKx) }}};showtitle(n);episode(nL);season(TB);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { tX ->  video {def J_Y = Float.parseFloat(tX.'Duration');codec(tX.'Format');micodec(tX.'Format');bitrate(tX.'BitRate');width(tX.'Width');height(tX.'Height');aspect(tX.'DisplayAspectRatio/String');aspectratio(tX.'DisplayAspectRatio/String');framerate(tX.'FrameRate');'default'(tX.'Default' == "Yes" ? "True" : "False");forced(tX.'Forced' == "Yes" ? "True" : "False");duration(tX.'Duration' ? (int) Math.floor(J_Y / 60000) : 0);durationinseconds(tX.'Duration' ? (int) Math.floor(J_Y / 1000) : 0)}};target.mediaInfo.Audio.each { xhF ->  audio {codec(xhF.'Format');micodec(xhF.'Format');language(xhF.'Language/String3');channels(xhF.'Channel(s)');samplingrate(xhF.'SamplingRate');'default'(xhF.'Default' == "Yes" ? "True" : "False");forced(xhF.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { k_ ->  subtitle {codec(k_.'Format');micodec(k_.'Format');width('0');height('0');language(k_.'Language/String3');'default'(k_.'Default' == "Yes" ? "True" : "False");forced(k_.'Forced' == "Yes" ? "True" : "False")}}}}}}}