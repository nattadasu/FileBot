{ source, target, metadata -> if (type.toString() != "Episode" && !f.video) {return null};def _FN = target.dir;def aj = any{ s } { 0 };def Ol = any{ e } { special };def SOY = 0;def LtT = null;try {if (db.TheTVDB?.id) {def XHD = "https://api.tvmaze.com";def rJ = curl "$XHD/lookup/shows?thetvdb=${db.TheTVDB.id}";def RD = rJ.id;LtT = curl "$XHD/shows/$RD/episodebynumber?season=$aj&number=$Ol";SOY = LtT.id}} catch (Exception err) {};def Ttb = "";def JXF = "en-US";def CH = null;def Lw = new File("$home/.filebotsecrets.json");if (Lw.exists()) {def tl = new groovy.json.JsonSlurper().parseText(Lw.text);Ttb = tl.Ttb;JXF = tl.language;CH = tl.person_info_dir};def dKL = "https://api.themoviedb.org/3/tv/$id/season/$aj/episode/$Ol";def Alh = ["accept": "application/json"];def sAA = curl(Alh, "$dKL?language=$JXF&api_key=$Ttb");def VC = curl(Alh, "$dKL/external_ids?api_key=$Ttb");def sa = curl(Alh, "$dKL/credits?language=$JXF&api_key=$Ttb");def HQ = curl(Alh, "$dKL/images?include_image_language=en%2Cnull&api_key=$Ttb");def vBM = (_FN / target.nameWithoutExtension + "-thumb.jpg").toString();def rvi = new File(vBM);def yEy = new File(vBM.replace("-thumb",""));if (!(rvi.exists() || yEy.exists()) && HQ.stills.size() > 0) {def qYY = "https://image.tmdb.org/t/p/original${HQ.stills[0].file_path}";system "curl", "-o", _FN / target.nameWithoutExtension + "-thumb.jpg", qYY};def bPA = [];(sa.cast + sa.guest_stars).eachWithIndex { APB, osu -> def ZWN = "$CH/${APB.name[0]}/${APB.name}";def oL = APB.order ?: osu + bPA.size();bPA << [rRC: APB.name, YL: APB.character, AH: oL, ZWN: "${ZWN}/folder.jpg"];if (CH) {def zzI = new File(ZWN);if (!zzI.exists()) {zzI.mkdirs();system "curl", "-o", "${ZWN}/folder.jpg", "https://image.tmdb.org/t/p/original${APB.profile_path}"}}};def QlH = _FN / target.nameWithoutExtension + ".nfo";XML(QlH) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(sAA.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (VC?.imdb_id) {uniqueid(type: "imdb", value: VC.imdb_id, VC.imdb_id);imdbid(VC.imdb_id)};if (VC?.tvdb_id) {uniqueid(type: "tvdb", value: VC.tvdb_id, VC.tvdb_id);tvdbid(VC.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (SOY) {uniqueid(type: "tvmaze", value: SOY, SOY);tvmazeid(SOY)}} catch (Exception err) {};if (rvi.exists()) {art {poster(vBM)}};bPA.each { E_ ->  actor {name(E_.rRC);role(E_.YL);sortorder(E_.AH);if (CH) { thumb(E_.ZWN) }}};showtitle(n);episode(Ol);season(aj);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { ec ->  video {def DdN = Float.parseFloat(ec.'Duration');codec(ec.'Format');micodec(ec.'Format');bitrate(ec.'BitRate');width(ec.'Width');height(ec.'Height');aspect(ec.'DisplayAspectRatio/String');aspectratio(ec.'DisplayAspectRatio/String');framerate(ec.'FrameRate');'default'(ec.'Default' == "Yes" ? "True" : "False");forced(ec.'Forced' == "Yes" ? "True" : "False");duration(ec.'Duration' ? (int) Math.floor(DdN / 60000) : 0);durationinseconds(ec.'Duration' ? (int) Math.floor(DdN / 1000) : 0)}};target.mediaInfo.Audio.each { czU ->  audio {codec(czU.'Format');micodec(czU.'Format');language(czU.'Language/String3');channels(czU.'Channel(s)');samplingrate(czU.'SamplingRate');'default'(czU.'Default' == "Yes" ? "True" : "False");forced(czU.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Epo ->  subtitle {codec(Epo.'Format');micodec(Epo.'Format');width('0');height('0');language(Epo.'Language/String3');'default'(Epo.'Default' == "Yes" ? "True" : "False");forced(Epo.'Forced' == "Yes" ? "True" : "False")}}}}}}}