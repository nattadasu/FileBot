{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Qgz = target.dir;def Gev = any{ s } { 0 };def QYg = any{ e } { special };def SOM = 0;def pf = null;try {if (db.TheTVDB?.id) {def r_ = "https://api.tvmaze.com";def rYq = curl "$r_/lookup/shows?thetvdb=${db.TheTVDB.id}";def EnC = rYq.id;pf = curl "$r_/shows/$EnC/episodebynumber?season=$Gev&number=$QYg";SOM = pf.id}} catch (Exception err) {};def BA = "";def dP = "en-US";def Rs = null;def LZU = new File("$home/.filebotsecrets.json");if (LZU.exists()) {def _k = new groovy.json.JsonSlurper().parseText(LZU.text);BA = _k.BA;dP = _k.language;Rs = _k.person_info_dir};def BHm = "https://api.themoviedb.org/3/tv/$id/season/$Gev/episode/$QYg";def VD = ["accept": "application/json"];def pHo = curl(VD, "$BHm?language=$dP&api_key=$BA");def da = curl(VD, "$BHm/external_ids?api_key=$BA");def XSf = curl(VD, "$BHm/credits?language=$dP&api_key=$BA");def Mv = curl(VD, "$BHm/images?include_image_language=en%2Cnull&api_key=$BA");def Snw = (Qgz / target.nameWithoutExtension + "-thumb.jpg").toString();def Dm = new File(Snw);def nYf = new File(Snw.replace("-thumb",""));if (!(Dm.exists() || nYf.exists()) && Mv.stills.size() > 0) {def zaC = "https://image.tmdb.org/t/p/original${Mv.stills[0].file_path}";system "curl", "-o", Qgz / target.nameWithoutExtension + "-thumb.jpg", zaC};def hj = [];(XSf.cast + XSf.guest_stars).eachWithIndex { Cb, OXg ->  def vi = "$Rs/${Cb.name[0]}/${Cb.name}";def Gn = Cb.order ?: OXg + hj.size();hj << [Jf: Cb.name, YW: Cb.character, qe: Gn, vi: "${vi}/folder.jpg"];if (Rs) {def kGL = new File(vi);if (!kGL.exists()) {kGL.mkdirs();system "curl", "-o", "${vi}/folder.jpg", "https://image.tmdb.org/t/p/original${Cb.profile_path}"}}};def yn = Qgz / target.nameWithoutExtension + ".nfo";XML(yn) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(pHo.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (da?.imdb_id) {uniqueid(type: "imdb", value: da.imdb_id, da.imdb_id);imdbid(da.imdb_id)};if (da?.tvdb_id) {uniqueid(type: "tvdb", value: da.tvdb_id, da.tvdb_id);tvdbid(da.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (SOM) {uniqueid(type: "tvmaze", value: SOM, SOM);tvmazeid(SOM)}} catch (Exception err) {};if (Dm.exists()) {art {poster(Snw)}};hj.each { __ ->  actor {name(__.Jf);role(__.YW);sortorder(__.qe);if (Rs) { thumb(__.vi) }}};showtitle(n);episode(QYg);season(Gev);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { YMr ->  video {def HT = Float.parseFloat(YMr.'Duration');codec(YMr.'Format');micodec(YMr.'Format');bitrate(YMr.'BitRate');width(YMr.'Width');height(YMr.'Height');aspect(YMr.'DisplayAspectRatio/String');aspectratio(YMr.'DisplayAspectRatio/String');framerate(YMr.'FrameRate');'default'(YMr.'Default' == "Yes" ? "True" : "False");forced(YMr.'Forced' == "Yes" ? "True" : "False");duration(YMr.'Duration' ? (int) Math.floor(HT / 60000) : 0);durationinseconds(YMr.'Duration' ? (int) Math.floor(HT / 1000) : 0)}};target.mediaInfo.Audio.each { FT ->  audio {codec(FT.'Format');micodec(FT.'Format');language(FT.'Language/String3');channels(FT.'Channel(s)');samplingrate(FT.'SamplingRate');'default'(FT.'Default' == "Yes" ? "True" : "False");forced(FT.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { nc ->  subtitle {codec(nc.'Format');micodec(nc.'Format');width('0');height('0');language(nc.'Language/String3');'default'(nc.'Default' == "Yes" ? "True" : "False");forced(nc.'Forced' == "Yes" ? "True" : "False")}}}}}}}