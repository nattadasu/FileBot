{ source, target, metadata -> if (type.toString() != "Episode" && !f.video) {return null};def Obb = target.dir;def RsD = any{ s } { 0 };def Gv = any{ e } { special };def wK = 0;def PsF = null;try {if (db.TheTVDB?.id) {def Sz = "https://api.tvmaze.com";def exp = curl "$Sz/lookup/shows?thetvdb=${db.TheTVDB.id}";def FW = exp.id;PsF = curl "$Sz/shows/$FW/episodebynumber?season=$RsD&number=$Gv";wK = PsF.id}} catch (Exception err) {};def MQ = "";def JWM = "en-US";def CO = null;def Gw = new File("$home/.filebotsecrets.json");if (Gw.exists()) {def zya = new groovy.json.JsonSlurper().parseText(Gw.text);MQ = zya.MQ;JWM = zya.language;CO = zya.person_info_dir};def TZ = "https://api.themoviedb.org/3/tv/$id/season/$RsD/episode/$Gv";def szN = ["accept": "application/json"];def LjA = curl(szN, "$TZ?language=$JWM&api_key=$MQ");def Nc = curl(szN, "$TZ/external_ids?api_key=$MQ");def THZ = curl(szN, "$TZ/credits?language=$JWM&api_key=$MQ");def wx = curl(szN, "$TZ/images?include_image_language=en%2Cnull&api_key=$MQ");def SI = (Obb / target.nameWithoutExtension + "-thumb.jpg").toString();def aqa = new File(SI);def WbP = new File(SI.replace("-thumb",""));if (!(aqa.exists() || WbP.exists()) && wx.stills.size() > 0) {def pyB = "https://image.tmdb.org/t/p/original${wx.stills[0].file_path}";system "curl", "-o", Obb / target.nameWithoutExtension + "-thumb.jpg", pyB};def gWR = [];(THZ.cast + THZ.guest_stars).eachWithIndex { sh, SNA -> def cFV = "$CO/${sh.name[0]}/${sh.name}";def NtK = sh.order ?: SNA + gWR.size();gWR << [XKE: sh.name, rNu: sh.character, iVZ: NtK, cFV: "${cFV}/folder.jpg"];if (CO) {def tnA = new File(cFV);if (!tnA.exists()) {tnA.mkdirs();system "curl", "-o", "${cFV}/folder.jpg", "https://image.tmdb.org/t/p/original${sh.profile_path}"}}};def qux = Obb / target.nameWithoutExtension + ".nfo";XML(qux) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(LjA.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Nc?.imdb_id) {uniqueid(type: "imdb", value: Nc.imdb_id, Nc.imdb_id);imdbid(Nc.imdb_id)};if (Nc?.tvdb_id) {uniqueid(type: "tvdb", value: Nc.tvdb_id, Nc.tvdb_id);tvdbid(Nc.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (wK) {uniqueid(type: "tvmaze", value: wK, wK);tvmazeid(wK)}} catch (Exception err) {};if (aqa.exists()) {art {poster(SI)}};gWR.each { eNK ->  actor {name(eNK.XKE);role(eNK.rNu);sortorder(eNK.iVZ);if (CO) { thumb(eNK.cFV) }}};showtitle(n);episode(Gv);season(RsD);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { _qj ->  video {def vSh = Float.parseFloat(_qj.'Duration');codec(_qj.'Format');micodec(_qj.'Format');bitrate(_qj.'BitRate');width(_qj.'Width');height(_qj.'Height');aspect(_qj.'DisplayAspectRatio/String');aspectratio(_qj.'DisplayAspectRatio/String');framerate(_qj.'FrameRate');'default'(_qj.'Default' == "Yes" ? "True" : "False");forced(_qj.'Forced' == "Yes" ? "True" : "False");duration(_qj.'Duration' ? (int) Math.floor(vSh / 60000) : 0);durationinseconds(_qj.'Duration' ? (int) Math.floor(vSh / 1000) : 0)}};target.mediaInfo.Audio.each { PFr ->  audio {codec(PFr.'Format');micodec(PFr.'Format');language(PFr.'Language/String3');channels(PFr.'Channel(s)');samplingrate(PFr.'SamplingRate');'default'(PFr.'Default' == "Yes" ? "True" : "False");forced(PFr.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { xl ->  subtitle {codec(xl.'Format');micodec(xl.'Format');width('0');height('0');language(xl.'Language/String3');'default'(xl.'Default' == "Yes" ? "True" : "False");forced(xl.'Forced' == "Yes" ? "True" : "False")}}}}}}}