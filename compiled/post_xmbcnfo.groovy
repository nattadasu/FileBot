{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def lQM = target.dir;def Qk = any{ s } { 0 };def LZ = any{ e } { special };def jlE = 0;def YdM = null;try {if (db.TheTVDB?.id) {def EWZ = "https://api.tvmaze.com";def fN = curl "$EWZ/lookup/shows?thetvdb=${db.TheTVDB.id}";def JSC = fN.id;YdM = curl "$EWZ/shows/$JSC/episodebynumber?season=$Qk&number=$LZ";jlE = YdM.id}} catch (Exception err) {};def Pq = "";def CC = "en-US";def fYu = null;def nsB = new File("$home/.filebotsecrets.json");if (nsB.exists()) {def Fs = new groovy.json.JsonSlurper().parseText(nsB.text);Pq = Fs.Pq;CC = Fs.language;fYu = Fs.person_info_dir};def quI = "https://api.themoviedb.org/3/tv/$id/season/$Qk/episode/$LZ";def HlR = ["accept": "application/json"];def As = curl(HlR, "$quI?language=$CC&api_key=$Pq");def XT = curl(HlR, "$quI/external_ids?api_key=$Pq");def kTM = curl(HlR, "$quI/credits?language=$CC&api_key=$Pq");def jJD = curl(HlR, "$quI/images?include_image_language=en%2Cnull&api_key=$Pq");def huP = (lQM / target.nameWithoutExtension + "-thumb.jpg").toString();def nqP = new File(huP);def PH = new File(huP.replace("-thumb",""));if (!(nqP.exists() || PH.exists()) && jJD.stills.size() > 0) {def NZJ = "https://image.tmdb.org/t/p/original${jJD.stills[0].file_path}";system "curl", "-o", lQM / target.nameWithoutExtension + "-thumb.jpg", NZJ};def LQD = [];(kTM.cast + kTM.guest_stars).eachWithIndex { qOO, eR ->  def Pfl = "$fYu/${qOO.name[0]}/${qOO.name}";def BRt = qOO.order ?: eR + LQD.size();LQD << [ONN: qOO.name, ej: qOO.character, Tx: BRt, Pfl: "${Pfl}/folder.jpg"];if (fYu) {def Tak = new File(Pfl);if (!Tak.exists()) {Tak.mkdirs();system "curl", "-o", "${Pfl}/folder.jpg", "https://image.tmdb.org/t/p/original${qOO.profile_path}"}}};def VPE = lQM / target.nameWithoutExtension + ".nfo";XML(VPE) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(As.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (XT?.imdb_id) {uniqueid(type: "imdb", value: XT.imdb_id, XT.imdb_id);imdbid(XT.imdb_id)};if (XT?.tvdb_id) {uniqueid(type: "tvdb", value: XT.tvdb_id, XT.tvdb_id);tvdbid(XT.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (jlE) {uniqueid(type: "tvmaze", value: jlE, jlE);tvmazeid(jlE)}} catch (Exception err) {};if (nqP.exists()) {art {poster(huP)}};LQD.each { TE ->  actor {name(TE.ONN);role(TE.ej);sortorder(TE.Tx);if (fYu) { thumb(TE.Pfl) }}};showtitle(n);episode(LZ);season(Qk);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { zm ->  video {def Vs = Float.parseFloat(zm.'Duration');codec(zm.'Format');micodec(zm.'Format');bitrate(zm.'BitRate');width(zm.'Width');height(zm.'Height');aspect(zm.'DisplayAspectRatio/String');aspectratio(zm.'DisplayAspectRatio/String');framerate(zm.'FrameRate');'default'(zm.'Default' == "Yes" ? "True" : "False");forced(zm.'Forced' == "Yes" ? "True" : "False");duration(zm.'Duration' ? (int) Math.floor(Vs / 60000) : 0);durationinseconds(zm.'Duration' ? (int) Math.floor(Vs / 1000) : 0)}};target.mediaInfo.Audio.each { WkG ->  audio {codec(WkG.'Format');micodec(WkG.'Format');language(WkG.'Language/String3');channels(WkG.'Channel(s)');samplingrate(WkG.'SamplingRate');'default'(WkG.'Default' == "Yes" ? "True" : "False");forced(WkG.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { ix ->  subtitle {codec(ix.'Format');micodec(ix.'Format');width('0');height('0');language(ix.'Language/String3');'default'(ix.'Default' == "Yes" ? "True" : "False");forced(ix.'Forced' == "Yes" ? "True" : "False")}}}}}}}