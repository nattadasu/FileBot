{ source, target, metadata -> if (type.toString() != "Episode" && !f.video) {return null};def _qa = target.dir;def Avh = any{ s } { 0 };def jTI = any{ e } { special };def ol = 0;def PB = null;try {if (db.TheTVDB?.id) {def AmN = "https://api.tvmaze.com";def dG = curl "$AmN/lookup/shows?thetvdb=${db.TheTVDB.id}";def HM = dG.id;PB = curl "$AmN/shows/$HM/episodebynumber?season=$Avh&number=$jTI";ol = PB.id}} catch (Exception err) {};def ony = "";def Fo = "en-US";def Hzs = null;def Dgi = new File("$home/.filebotsecrets.json");if (Dgi.exists()) {def mS = new groovy.json.JsonSlurper().parseText(Dgi.text);ony = mS.ony;Fo = mS.language;Hzs = mS.person_info_dir};def Fdq = "https://api.themoviedb.org/3/tv/$id/season/$Avh/episode/$jTI";def ZIw = ["accept": "application/json"];def lF = curl(ZIw, "$Fdq?language=$Fo&api_key=$ony");def kP = curl(ZIw, "$Fdq/external_ids?api_key=$ony");def ciu = curl(ZIw, "$Fdq/credits?language=$Fo&api_key=$ony");def vQw = curl(ZIw, "$Fdq/images?include_image_language=en%2Cnull&api_key=$ony");def uwD = (_qa / target.nameWithoutExtension + "-thumb.jpg").toString();def fv = new File(uwD);def YwN = new File(uwD.replace("-thumb",""));if (!(fv.exists() || YwN.exists()) && vQw.stills.size() > 0) {def zc = "https://image.tmdb.org/t/p/original${vQw.stills[0].file_path}";system "curl", "-o", _qa / target.nameWithoutExtension + "-thumb.jpg", zc};def Ga = [];(ciu.cast + ciu.guest_stars).eachWithIndex { zRu, bdX -> def lV = "$Hzs/${zRu.name[0]}/${zRu.name}";def Zl = zRu.order ?: bdX + Ga.size();Ga << [JV: zRu.name, zLb: zRu.character, dni: Zl, lV: "${lV}/folder.jpg"];if (Hzs) {def Jig = new File(lV);if (!Jig.exists()) {Jig.mkdirs();system "curl", "-o", "${lV}/folder.jpg", "https://image.tmdb.org/t/p/original${zRu.profile_path}"}}};def kg = _qa / target.nameWithoutExtension + ".nfo";XML(kg) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(lF.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (kP?.imdb_id) {uniqueid(type: "imdb", value: kP.imdb_id, kP.imdb_id);imdbid(kP.imdb_id)};if (kP?.tvdb_id) {uniqueid(type: "tvdb", value: kP.tvdb_id, kP.tvdb_id);tvdbid(kP.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (ol) {uniqueid(type: "tvmaze", value: ol, ol);tvmazeid(ol)}} catch (Exception err) {};if (fv.exists()) {art {poster(uwD)}};Ga.each { OrM ->  actor {name(OrM.JV);role(OrM.zLb);sortorder(OrM.dni);if (Hzs) { thumb(OrM.lV) }}};showtitle(n);episode(jTI);season(Avh);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { GmP ->  video {def H_ = Float.parseFloat(GmP.'Duration');codec(GmP.'Format');micodec(GmP.'Format');bitrate(GmP.'BitRate');width(GmP.'Width');height(GmP.'Height');aspect(GmP.'DisplayAspectRatio/String');aspectratio(GmP.'DisplayAspectRatio/String');framerate(GmP.'FrameRate');'default'(GmP.'Default' == "Yes" ? "True" : "False");forced(GmP.'Forced' == "Yes" ? "True" : "False");duration(GmP.'Duration' ? (int) Math.floor(H_ / 60000) : 0);durationinseconds(GmP.'Duration' ? (int) Math.floor(H_ / 1000) : 0)}};target.mediaInfo.Audio.each { WZ ->  audio {codec(WZ.'Format');micodec(WZ.'Format');language(WZ.'Language/String3');channels(WZ.'Channel(s)');samplingrate(WZ.'SamplingRate');'default'(WZ.'Default' == "Yes" ? "True" : "False");forced(WZ.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { xRm ->  subtitle {codec(xRm.'Format');micodec(xRm.'Format');width('0');height('0');language(xRm.'Language/String3');'default'(xRm.'Default' == "Yes" ? "True" : "False");forced(xRm.'Forced' == "Yes" ? "True" : "False")}}}}}}}