{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Vr = target.dir;def sV = any{ s } { 0 };def kz = any{ e } { special };def Obq = 0;def WK = null;try {if (db.TheTVDB?.id) {def eM = "https://api.tvmaze.com";def _Oj = curl "$eM/lookup/shows?thetvdb=${db.TheTVDB.id}";def _Hz = _Oj.id;WK = curl "$eM/shows/$_Hz/episodebynumber?season=$sV&number=$kz";Obq = WK.id}} catch (Exception err) {};def lZ = "";def lO = "en-US";def ET = null;def lP = new File("$home/.filebotsecrets.json");if (lP.exists()) {def cRO = new groovy.json.JsonSlurper().parseText(lP.text);lZ = cRO.lZ;lO = cRO.language;ET = cRO.person_info_dir};def DkT = "https://api.themoviedb.org/3/tv/$id/season/$sV/episode/$kz";def Dg = ["accept": "application/json"];def ECk = curl(Dg, "$DkT?language=$lO&api_key=$lZ");def Lfe = curl(Dg, "$DkT/external_ids?api_key=$lZ");def Gah = curl(Dg, "$DkT/credits?language=$lO&api_key=$lZ");def Rn = curl(Dg, "$DkT/images?include_image_language=en%2Cnull&api_key=$lZ");def jQm = (Vr / target.nameWithoutExtension + "-thumb.jpg").toString();def tGQ = new File(jQm);def ER = new File(jQm.replace("-thumb",""));if (!(tGQ.exists() || ER.exists()) && Rn.stills.size() > 0) {def Ix = "https://image.tmdb.org/t/p/original${Rn.stills[0].file_path}";system "curl", "-o", Vr / target.nameWithoutExtension + "-thumb.jpg", Ix};def rd_ = [];(Gah.cast + Gah.guest_stars).eachWithIndex { SQK, zhU ->  def ip = "$ET/${SQK.name[0]}/${SQK.name}";def jDA = SQK.order ?: zhU + rd_.size();rd_ << [UAk: SQK.name, dHr: SQK.character, HQN: jDA, ip: "${ip}/folder.jpg"];if (ET) {def Kx = new File(ip);if (!Kx.exists()) {Kx.mkdirs();system "curl", "-o", "${ip}/folder.jpg", "https://image.tmdb.org/t/p/original${SQK.profile_path}"}}};def YL = Vr / target.nameWithoutExtension + ".nfo";XML(YL) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ECk.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Lfe?.imdb_id) {uniqueid(type: "imdb", value: Lfe.imdb_id, Lfe.imdb_id);imdbid(Lfe.imdb_id)};if (Lfe?.tvdb_id) {uniqueid(type: "tvdb", value: Lfe.tvdb_id, Lfe.tvdb_id);tvdbid(Lfe.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Obq) {uniqueid(type: "tvmaze", value: Obq, Obq);tvmazeid(Obq)}} catch (Exception err) {};if (tGQ.exists()) {art {poster(jQm)}};rd_.each { jFP ->  actor {name(jFP.UAk);role(jFP.dHr);sortorder(jFP.HQN);if (ET) { thumb(jFP.ip) }}};showtitle(n);episode(kz);season(sV);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { SRo ->  video {def rN = Float.parseFloat(SRo.'Duration');codec(SRo.'Format');micodec(SRo.'Format');bitrate(SRo.'BitRate');width(SRo.'Width');height(SRo.'Height');aspect(SRo.'DisplayAspectRatio/String');aspectratio(SRo.'DisplayAspectRatio/String');framerate(SRo.'FrameRate');'default'(SRo.'Default' == "Yes" ? "True" : "False");forced(SRo.'Forced' == "Yes" ? "True" : "False");duration(SRo.'Duration' ? (int) Math.floor(rN / 60000) : 0);durationinseconds(SRo.'Duration' ? (int) Math.floor(rN / 1000) : 0)}};target.mediaInfo.Audio.each { QyR ->  audio {codec(QyR.'Format');micodec(QyR.'Format');language(QyR.'Language/String3');channels(QyR.'Channel(s)');samplingrate(QyR.'SamplingRate');'default'(QyR.'Default' == "Yes" ? "True" : "False");forced(QyR.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { uHX ->  subtitle {codec(uHX.'Format');micodec(uHX.'Format');width('0');height('0');language(uHX.'Language/String3');'default'(uHX.'Default' == "Yes" ? "True" : "False");forced(uHX.'Forced' == "Yes" ? "True" : "False")}}}}}}}