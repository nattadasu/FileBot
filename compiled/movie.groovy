{def HVF = { System.getProperty(it) };def WP = HVF("os.name").toLowerCase().contains("windows");def hM = HVF("user.name");def WJZ = "/run/media/${hM}";def Wc = WP ? "H:/" : "$WJZ/Videos";def pOt = [[aw: "Books", gx: "F:/", vV: "$WJZ/Books"],[aw: "Data", gx: "D:/", vV: "$WJZ/Data"],[aw: "Games", gx: "G:/", vV: "$WJZ/Games"],[aw: "Music", gx: "E:/", vV: "$WJZ/Music"],[aw: "Videos", gx: "H:/", vV: "$WJZ/Videos"]];def vQf = (pOt.collect { it[WP ? "gx" : "vV"] as File }.sort { fZ, XxG ->  fZ.exists() <=> XxG.exists() ?: fZ.diskSpace <=> XxG.diskSpace }).last();def drN = Wc ?: vQf;"$drN/"}{"Videos/"}{def JT = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def Ds = "TheMovieDB::TV";def cmd = [[ 74180, Ds],[ 93821, Ds],[ 95897, Ds],[220118, Ds],[249891, Ds],[271026, Ds]];def nGY = [[236530, Ds]];def yh = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def vn = yh == "IMDb" ? "tt${id}" : id;def tV = any { info.adult } { false };def TSl = cmd.find { it[0] == vn && it[1] == yh } != null;def exW = nGY.find { it[0] == vn && it[1] == yh } != null;def dEQ = info.Keywords.findAll { it in JT } || TSl || tV;dEQ = exW ? false : dEQ;dEQ ? "R18+ " : ""}{def Hjx = ["CN", "JP", "KR", "KP", "TW", "HK"];def Pj = ["aeni", "donghua", "anime"];def oL = any {anime} || info.Keywords.findAll { it in Pj } || (Hjx.contains(country) && genres =~ /Animation/);oL ? "Anime Movies/" : "Movies/"}{def Ds = "TheMovieDB::TV";def jN = [[en: 136342, NXc: "Disney Twisted-Wonderland", xEn: Ds],[en: 213830, NXc: "I Was Reincarnated as the 7th Prince", xEn: Ds],[en: 221165, NXc: "Hyakusho Kizoku", xEn: Ds],[en: 236565, NXc: "Hero Without a Class", xEn: Ds],[en: 262453, NXc: "The Fated Magical Princess", xEn: Ds],[en: 270660, NXc: "Pochars", xEn: Ds],[en: 277581, NXc: "Dekin no Mogura", xEn: Ds],[en: 278635, NXc: "Unlimited Gacha", xEn: Ds],[en: 280038, NXc: "Apocalypse Bringer Mynoghra", xEn: Ds],[en: 280405, NXc: "Fudanshi Shoukan", xEn: Ds],[en: 285260, NXc: "Kaijyu Sekai Seifuku", xEn: Ds],[en: 295625, NXc: "Marie Antoinette ni Tensei Shita", xEn: Ds],[en: 296047, NXc: "Shuukan Ranobe Anime", xEn: Ds],[en: 296319, NXc: "Tomica Heroes Job Labor (TV)", xEn: Ds],[en: 297286, NXc: "Potions Will Save Me", xEn: Ds],[en: 302169, NXc: "Anila and Cocora", xEn: Ds]];def yh = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def vn = yh == "IMDb" ? "tt${id}" : id;def Fkz = n;jN.each {if (it.en == vn && it.xEn == yh) {Fkz = it.NXc}};def Lk = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qr = Fkz.replaceAll(Lk.collect { "\\" + it }.join('|'), '');Qr = Qr.replaceAll(/(\s|\.)*$/, '');Qr}{" ("}{y}{")"}{"/"}{def Nl = ["AkiraRIPS","Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def vFe = Nl.find { MT ->  fn.lower().contains(MT.lower()) } ?: "";def CO = any {vFe} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};CO ? "[$CO] " : ""}{def Ds = "TheMovieDB::TV";def jN = [[en: 136342, NXc: "Disney Twisted-Wonderland", xEn: Ds],[en: 213830, NXc: "I Was Reincarnated as the 7th Prince", xEn: Ds],[en: 221165, NXc: "Hyakusho Kizoku", xEn: Ds],[en: 236565, NXc: "Hero Without a Class", xEn: Ds],[en: 262453, NXc: "The Fated Magical Princess", xEn: Ds],[en: 270660, NXc: "Pochars", xEn: Ds],[en: 277581, NXc: "Dekin no Mogura", xEn: Ds],[en: 278635, NXc: "Unlimited Gacha", xEn: Ds],[en: 280038, NXc: "Apocalypse Bringer Mynoghra", xEn: Ds],[en: 280405, NXc: "Fudanshi Shoukan", xEn: Ds],[en: 285260, NXc: "Kaijyu Sekai Seifuku", xEn: Ds],[en: 295625, NXc: "Marie Antoinette ni Tensei Shita", xEn: Ds],[en: 296047, NXc: "Shuukan Ranobe Anime", xEn: Ds],[en: 296319, NXc: "Tomica Heroes Job Labor (TV)", xEn: Ds],[en: 297286, NXc: "Potions Will Save Me", xEn: Ds],[en: 302169, NXc: "Anila and Cocora", xEn: Ds]];def yh = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def vn = yh == "IMDb" ? "tt${id}" : id;def Fkz = n;jN.each {if (it.en == vn && it.xEn == yh) {Fkz = it.NXc}};def Lk = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qr = Fkz.replaceAll(Lk.collect { "\\" + it }.join('|'), '');Qr = Qr.replaceAll(/(\s|\.)*$/, '');Qr}{" ("}{y}{") ["}{def ot = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["BUMP"],["CMIC", "COOLMIC"],["CTHP"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NBLA.WEB-DL", "Nebula"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"],["TWTR"]];def AG = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU", "Kusonime"];def ZPm = ["DB"];def Vx = ["Ruri-Saizen"];def zg = ["Erai-raws", "SubsPlease"];def ms = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def bE = any {def Yj = ot.find { WV ->  WV.find { PUt ->  fn.lower().contains(PUt.lower()) } }[0];Yj = Yj.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {Yj = Yj.replace(".WEBRip", "");Yj = Yj + ".WEBRip"} else {Yj = Yj + ".WEB-DL"};Yj} {source} {AG.find { HE ->  group == HE || ms == HE } ? "WEBRip" : ""} {ZPm.find { HE ->  group == HE || ms == HE } ? "BDRip" : ""} {Vx.find { HE ->  group == HE || ms == HE } ? "HDTVRip" : ""} {def IH = zg.find { df ->  group == df || ms == df} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : IH} {vs} {""};bE ? "$bE " : ""}{def OL = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $OL, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def OJ = any { audioLanguages.size() } { 0 };def XEl = OJ > 2 ? " MULTi-AUD" : OJ > 1 ? " DUAL-AUD" : "";def OkJ = OJ > 5 ? audioLanguages.take(5) : audioLanguages;def EId = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";XEl = OJ == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$XEl$EId";XEl}{def _u = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def psw = any { _u.size() } { 0 };def XEl = psw > 2 ? ", MULTi" : psw > 1 ? ", DUAL" : psw == 1 ? ", SUB" : null;XEl}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def ufU = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def nVw = subt;ufU.values().each { WBI -> if (nVw.contains(WBI)) {nVw = nVw.replace(WBI, "")}};ufU.iso3b + nVw}}{f.image ? "-thumb" : ""}