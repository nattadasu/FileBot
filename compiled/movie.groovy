{def ZsO = { System.getProperty(it) };def ryN = ZsO("os.name").toLowerCase().contains("windows");def rL = ZsO("user.name");def SH = "/run/media/${rL}";def me = ryN ? "H:/" : "$SH/Videos";def kze = [[tQ: "Books", jo: "F:/", Jfl: "$SH/Books"],[tQ: "Data", jo: "D:/", Jfl: "$SH/Data"],[tQ: "Games", jo: "G:/", Jfl: "$SH/Games"],[tQ: "Music", jo: "E:/", Jfl: "$SH/Music"],[tQ: "Videos", jo: "H:/", Jfl: "$SH/Videos"]];def NK = (kze.collect { it[ryN ? "jo" : "Jfl"] as File }.sort { sH, _CP ->  sH.exists() <=> _CP.exists() ?: sH.diskSpace <=> _CP.diskSpace }).last();def nar = me ?: NK;"$nar/"}{"Videos/"}{def enz = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def Yd = "TheMovieDB::TV";def DWk = [[ 74180, Yd],[ 93821, Yd],[ 95897, Yd],[220118, Yd],[249891, Yd],[271026, Yd]];def xnA = [[236530, Yd]];def gvT = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Bv = gvT == "IMDb" ? "tt${id}" : id;def zG = any { info.adult } { false };def VSs = DWk.find { it[0] == Bv && it[1] == gvT } != null;def oB = xnA.find { it[0] == Bv && it[1] == gvT } != null;def DB = info.Keywords.findAll { it in enz } || VSs || zG;DB = oB ? false : DB;DB ? "R18+ " : ""}{def gA = ["CN", "JP", "KR", "KP", "TW", "HK"];def Zc = ["aeni", "donghua", "anime"];def ax = any {anime} || info.Keywords.findAll { it in Zc } || (gA.contains(country) && genres =~ /Animation/);ax ? "Anime Movies/" : "Movies/"}{def Yd = "TheMovieDB::TV";def Dxt = [[euR: 213830, ceb: "I Was Reincarnated as the 7th Prince", KWI: Yd],[euR: 221165, ceb: "Hyakusho Kizoku", KWI: Yd],[euR: 236565, ceb: "Hero Without a Class", KWI: Yd],[euR: 262453, ceb: "The Fated Magical Princess", KWI: Yd],[euR: 270660, ceb: "Pochars", KWI: Yd],[euR: 277581, ceb: "Dekin no Mogura", KWI: Yd],[euR: 278635, ceb: "Unlimited Gacha", KWI: Yd],[euR: 280038, ceb: "Apocalypse Bringer Mynoghra", KWI: Yd],[euR: 280405, ceb: "Fudanshi Shoukan", KWI: Yd],[euR: 285260, ceb: "Kaijyu Sekai Seifuku", KWI: Yd],[euR: 295625, ceb: "Marie Antoinette ni Tensei Shita", KWI: Yd],[euR: 296047, ceb: "Shuukan Ranobe Anime", KWI: Yd],[euR: 296319, ceb: "Tomica Heroes Job Labor (TV)", KWI: Yd],[euR: 297286, ceb: "Potions Will Save Me", KWI: Yd],[euR: 302169, ceb: "Anila and Cocora", KWI: Yd]];def gvT = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Bv = gvT == "IMDb" ? "tt${id}" : id;def dv = n;Dxt.each {if (it.euR == Bv && it.KWI == gvT) {dv = it.ceb}};def xB = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rcY = dv.replaceAll(xB.collect { "\\" + it }.join('|'), '');rcY = rcY.replaceAll(/(\s|\.)*$/, '');rcY}{" ("}{y}{")"}{"/"}{def WK = ["AkiraRIPS","Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def biz = WK.find { cJ ->  fn.lower().contains(cJ.lower()) } ?: "";def bu = any {biz} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};bu ? "[$bu] " : ""}{def Yd = "TheMovieDB::TV";def Dxt = [[euR: 213830, ceb: "I Was Reincarnated as the 7th Prince", KWI: Yd],[euR: 221165, ceb: "Hyakusho Kizoku", KWI: Yd],[euR: 236565, ceb: "Hero Without a Class", KWI: Yd],[euR: 262453, ceb: "The Fated Magical Princess", KWI: Yd],[euR: 270660, ceb: "Pochars", KWI: Yd],[euR: 277581, ceb: "Dekin no Mogura", KWI: Yd],[euR: 278635, ceb: "Unlimited Gacha", KWI: Yd],[euR: 280038, ceb: "Apocalypse Bringer Mynoghra", KWI: Yd],[euR: 280405, ceb: "Fudanshi Shoukan", KWI: Yd],[euR: 285260, ceb: "Kaijyu Sekai Seifuku", KWI: Yd],[euR: 295625, ceb: "Marie Antoinette ni Tensei Shita", KWI: Yd],[euR: 296047, ceb: "Shuukan Ranobe Anime", KWI: Yd],[euR: 296319, ceb: "Tomica Heroes Job Labor (TV)", KWI: Yd],[euR: 297286, ceb: "Potions Will Save Me", KWI: Yd],[euR: 302169, ceb: "Anila and Cocora", KWI: Yd]];def gvT = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Bv = gvT == "IMDb" ? "tt${id}" : id;def dv = n;Dxt.each {if (it.euR == Bv && it.KWI == gvT) {dv = it.ceb}};def xB = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rcY = dv.replaceAll(xB.collect { "\\" + it }.join('|'), '');rcY = rcY.replaceAll(/(\s|\.)*$/, '');rcY}{" ("}{y}{") ["}{def Gic = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["BUMP"],["CMIC", "COOLMIC"],["CTHP"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NBLA.WEB-DL", "Nebula"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"],["TWTR"]];def _Nj = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU", "Kusonime"];def kcV = ["DB"];def _Km = ["Ruri-Saizen"];def xK = ["Erai-raws", "SubsPlease"];def lzM = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Xc = any {def kzL = Gic.find { JVC ->  JVC.find { LFL ->  fn.lower().contains(LFL.lower()) } }[0];kzL = kzL.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {kzL = kzL.replace(".WEBRip", "");kzL = kzL + ".WEBRip"} else {kzL = kzL + ".WEB-DL"};kzL} {source} {_Nj.find { kbz ->  group == kbz || lzM == kbz } ? "WEBRip" : ""} {kcV.find { kbz ->  group == kbz || lzM == kbz } ? "BDRip" : ""} {_Km.find { kbz ->  group == kbz || lzM == kbz } ? "HDTVRip" : ""} {def opN = xK.find { NY_ ->  group == NY_ || lzM == NY_} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : opN} {vs} {""};Xc ? "$Xc " : ""}{def wqY = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $wqY, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def rj = any { audioLanguages.size() } { 0 };def qLY = rj > 2 ? " MULTi-AUD" : rj > 1 ? " DUAL-AUD" : "";def Zhc = rj > 5 ? audioLanguages.take(5) : audioLanguages;def oAk = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";qLY = rj == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$qLY$oAk";qLY}{def DBX = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def bCV = any { DBX.size() } { 0 };def qLY = bCV > 2 ? ", MULTi" : bCV > 1 ? ", DUAL" : bCV == 1 ? ", SUB" : null;qLY}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def xR = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Gm = subt;xR.values().each { BeR -> if (Gm.contains(BeR)) {Gm = Gm.replace(BeR, "")}};xR.iso3b + Gm}}{f.image ? "-thumb" : ""}