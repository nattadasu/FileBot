{def PDW = { System.getProperty(it) };def gcm = PDW("os.name").toLowerCase().contains("windows");def XsC = PDW("user.name");def CF = "/run/media/${XsC}";def GP = gcm ? "H:/" : "$CF/Videos";def GVw = [[VPF: "Books", XG_: "F:/", CDv: "$CF/Books"],[VPF: "Data", XG_: "D:/", CDv: "$CF/Data"],[VPF: "Games", XG_: "G:/", CDv: "$CF/Games"],[VPF: "Music", XG_: "E:/", CDv: "$CF/Music"],[VPF: "Videos", XG_: "H:/", CDv: "$CF/Videos"]];def Phn = (GVw.collect { it[gcm ? "XG_" : "CDv"] as File }.sort { AU, dmO ->  AU.exists() <=> dmO.exists() ?: AU.diskSpace <=> dmO.diskSpace }).last();def Dg = GP ?: Phn;"$Dg/"}{"Videos/"}{def TZ = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def jQP = "TheMovieDB::TV";def ky = [[ 74180, jQP],[ 93821, jQP],[ 95897, jQP],[220118, jQP],[249891, jQP],[271026, jQP]];def rz = [[236530, jQP]];def lJQ = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Og = lJQ == "IMDb" ? "tt${id}" : id;def XdM = any { info.adult } { false };def INM = ky.find { it[0] == Og && it[1] == lJQ } != null;def lx = rz.find { it[0] == Og && it[1] == lJQ } != null;def NGg = info.Keywords.findAll { it in TZ } || INM || XdM;NGg = lx ? false : NGg;NGg ? "R18+ " : ""}{def sk = ["CN", "JP", "KR", "KP", "TW", "HK"];def wjP = ["aeni", "donghua", "anime"];def vT = any {anime} || info.Keywords.findAll { it in wjP } || (sk.contains(country) && genres =~ /Animation/);vT ? "Anime/" : "TV Series/"}{def jQP = "TheMovieDB::TV";def Trz = [[ocj: 213830, EMG: "I Was Reincarnated as the 7th Prince", XUo: jQP],[ocj: 221165, EMG: "Hyakusho Kizoku", XUo: jQP],[ocj: 236565, EMG: "Hero Without a Class", XUo: jQP],[ocj: 262453, EMG: "The Fated Magical Princess", XUo: jQP],[ocj: 270660, EMG: "Pochars", XUo: jQP],[ocj: 277581, EMG: "Dekin no Mogura", XUo: jQP],[ocj: 278635, EMG: "Unlimited Gacha", XUo: jQP],[ocj: 280038, EMG: "Apocalypse Bringer Mynoghra", XUo: jQP],[ocj: 280405, EMG: "Fudanshi Shoukan", XUo: jQP],[ocj: 285260, EMG: "Kaijyu Sekai Seifuku", XUo: jQP],[ocj: 295625, EMG: "Marie Antoinette ni Tensei Shita", XUo: jQP],[ocj: 296047, EMG: "Shuukan Ranobe Anime", XUo: jQP],[ocj: 296319, EMG: "Tomica Heroes Job Labor (TV)", XUo: jQP],[ocj: 297286, EMG: "Potions Will Save Me", XUo: jQP],[ocj: 302169, EMG: "Anila and Cocora", XUo: jQP]];def lJQ = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Og = lJQ == "IMDb" ? "tt${id}" : id;def wh = n;Trz.each {if (it.ocj == Og && it.XUo == lJQ) {wh = it.EMG}};def SPd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def eha = wh.replaceAll(SPd.collect { "\\" + it }.join('|'), '');eha = eha.replaceAll(/(\s|\.)*$/, '');eha}{def jQP = "TheMovieDB::TV";def uf = [[ 95897, jQP],[123542, jQP],[129633, jQP],[257162, jQP],[259140, jQP],[296287, jQP]];def eT = uf.find { it[0] == id && it[1] == info.database } != null;def Gwy = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def dT = Gwy[info.database];eT ? " ($y) [${dT}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def SPd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def eha = sn.replaceAll(SPd.collect { "\\" + it }.join('|'), '_');def c_ = n.replaceAll(SPd.collect { "\\" + it }.join('|'), '_');def OzX = eha.contains(c_) ? "" : eha;OzX == 'Season '+ s || OzX == 'Series '+ s ? "" : OzX ? " - " + OzX : ""}{"/"}{def ho = ["AkiraRIPS","Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def bbc = ho.find { iz ->  fn.lower().contains(iz.lower()) } ?: "";def LXQ = any {bbc} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};LXQ ? "[$LXQ] " : ""}{def jQP = "TheMovieDB::TV";def Trz = [[ocj: 213830, EMG: "I Was Reincarnated as the 7th Prince", XUo: jQP],[ocj: 221165, EMG: "Hyakusho Kizoku", XUo: jQP],[ocj: 236565, EMG: "Hero Without a Class", XUo: jQP],[ocj: 262453, EMG: "The Fated Magical Princess", XUo: jQP],[ocj: 270660, EMG: "Pochars", XUo: jQP],[ocj: 277581, EMG: "Dekin no Mogura", XUo: jQP],[ocj: 278635, EMG: "Unlimited Gacha", XUo: jQP],[ocj: 280038, EMG: "Apocalypse Bringer Mynoghra", XUo: jQP],[ocj: 280405, EMG: "Fudanshi Shoukan", XUo: jQP],[ocj: 285260, EMG: "Kaijyu Sekai Seifuku", XUo: jQP],[ocj: 295625, EMG: "Marie Antoinette ni Tensei Shita", XUo: jQP],[ocj: 296047, EMG: "Shuukan Ranobe Anime", XUo: jQP],[ocj: 296319, EMG: "Tomica Heroes Job Labor (TV)", XUo: jQP],[ocj: 297286, EMG: "Potions Will Save Me", XUo: jQP],[ocj: 302169, EMG: "Anila and Cocora", XUo: jQP]];def lJQ = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Og = lJQ == "IMDb" ? "tt${id}" : id;def wh = n;Trz.each {if (it.ocj == Og && it.XUo == lJQ) {wh = it.EMG}};def SPd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def eha = wh.replaceAll(SPd.collect { "\\" + it }.join('|'), '');eha = eha.replaceAll(/(\s|\.)*$/, '');eha}{" - "}{s00e00}{def Kv = (fn =~ /(?i)(?<![a-zA-Z])v(\d+)/);Kv ? 'v' + Kv[0][1] : ''}{def SPd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def eha = t.replaceAll(SPd.collect { "\\" + it }.join('|'), '_');eha = eha.length() > 100 ? " " : " - $eha ";def vKr = any { e } { special };def bGy = "Episode $vKr";def EZe = eha.contains(bGy) ? '' : eha;special ? EZe : ''}{" ["}{def GM = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["BUMP"],["CMIC", "COOLMIC"],["CTHP"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NBLA.WEB-DL", "Nebula"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"],["TWTR"]];def TF = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU", "Kusonime"];def SU = ["DB"];def vlC = ["Ruri-Saizen"];def jC = ["Erai-raws", "SubsPlease"];def mE = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def MS = any {def rv = GM.find { JW ->  JW.find { ZaC ->  fn.lower().contains(ZaC.lower()) } }[0];rv = rv.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {rv = rv.replace(".WEBRip", "");rv = rv + ".WEBRip"} else {rv = rv + ".WEB-DL"};rv} {source} {TF.find { CL ->  group == CL || mE == CL } ? "WEBRip" : ""} {SU.find { CL ->  group == CL || mE == CL } ? "BDRip" : ""} {vlC.find { CL ->  group == CL || mE == CL } ? "HDTVRip" : ""} {def _u = jC.find { NZ ->  group == NZ || mE == NZ} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : _u} {vs} {""};MS ? "$MS " : ""}{def BE = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $BE, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Rpq = any { audioLanguages.size() } { 0 };def oDA = Rpq > 2 ? " MULTi-AUD" : Rpq > 1 ? " DUAL-AUD" : "";def JB = Rpq > 5 ? audioLanguages.take(5) : audioLanguages;def kc = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";oDA = Rpq == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$oDA$kc";oDA}{def EI_ = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def yvs = any { EI_.size() } { 0 };def oDA = yvs > 2 ? ", MULTi" : yvs > 1 ? ", DUAL" : yvs == 1 ? ", SUB" : null;oDA}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def pLF = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Bw = subt;pLF.values().each { wMr -> if (Bw.contains(wMr)) {Bw = Bw.replace(wMr, "")}};pLF.iso3b + Bw}}{f.image ? "-thumb" : ""}